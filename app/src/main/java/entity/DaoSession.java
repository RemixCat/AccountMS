package entity;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import entity.Tb_flag;
import entity.Tb_inaccount;
import entity.Tb_outaccount;
import entity.Tb_pwd;

import entity.Tb_flagDao;
import entity.Tb_inaccountDao;
import entity.Tb_outaccountDao;
import entity.Tb_pwdDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig tb_flagDaoConfig;
    private final DaoConfig tb_inaccountDaoConfig;
    private final DaoConfig tb_outaccountDaoConfig;
    private final DaoConfig tb_pwdDaoConfig;

    private final Tb_flagDao tb_flagDao;
    private final Tb_inaccountDao tb_inaccountDao;
    private final Tb_outaccountDao tb_outaccountDao;
    private final Tb_pwdDao tb_pwdDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        tb_flagDaoConfig = daoConfigMap.get(Tb_flagDao.class).clone();
        tb_flagDaoConfig.initIdentityScope(type);

        tb_inaccountDaoConfig = daoConfigMap.get(Tb_inaccountDao.class).clone();
        tb_inaccountDaoConfig.initIdentityScope(type);

        tb_outaccountDaoConfig = daoConfigMap.get(Tb_outaccountDao.class).clone();
        tb_outaccountDaoConfig.initIdentityScope(type);

        tb_pwdDaoConfig = daoConfigMap.get(Tb_pwdDao.class).clone();
        tb_pwdDaoConfig.initIdentityScope(type);

        tb_flagDao = new Tb_flagDao(tb_flagDaoConfig, this);
        tb_inaccountDao = new Tb_inaccountDao(tb_inaccountDaoConfig, this);
        tb_outaccountDao = new Tb_outaccountDao(tb_outaccountDaoConfig, this);
        tb_pwdDao = new Tb_pwdDao(tb_pwdDaoConfig, this);

        registerDao(Tb_flag.class, tb_flagDao);
        registerDao(Tb_inaccount.class, tb_inaccountDao);
        registerDao(Tb_outaccount.class, tb_outaccountDao);
        registerDao(Tb_pwd.class, tb_pwdDao);
    }
    
    public void clear() {
        tb_flagDaoConfig.clearIdentityScope();
        tb_inaccountDaoConfig.clearIdentityScope();
        tb_outaccountDaoConfig.clearIdentityScope();
        tb_pwdDaoConfig.clearIdentityScope();
    }

    public Tb_flagDao getTb_flagDao() {
        return tb_flagDao;
    }

    public Tb_inaccountDao getTb_inaccountDao() {
        return tb_inaccountDao;
    }

    public Tb_outaccountDao getTb_outaccountDao() {
        return tb_outaccountDao;
    }

    public Tb_pwdDao getTb_pwdDao() {
        return tb_pwdDao;
    }

}
